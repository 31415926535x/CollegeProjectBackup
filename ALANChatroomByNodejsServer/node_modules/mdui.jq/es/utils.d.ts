declare function isNodeName(element: Element, name: string): boolean;
declare function isFunction(target: any): target is Function;
declare function isString(target: any): target is string;
declare function isNumber(target: any): target is number;
declare function isBoolean(target: any): target is boolean;
declare function isUndefined(target: any): target is undefined;
declare function isNull(target: any): target is null;
declare function isWindow(target: any): target is Window;
declare function isDocument(target: any): target is Document;
declare function isElement(target: any): target is Element;
declare function isNode(target: any): target is Node;
/**
 * 是否是 IE 浏览器
 */
declare function isIE(): boolean;
declare function isArrayLike(target: any): target is ArrayLike<any>;
declare function isObjectLike(target: any): target is Record<string, any>;
declare function toElement(target: Element | Document): Element;
/**
 * 把用 - 分隔的字符串转为驼峰（如 box-sizing 转换为 boxSizing）
 * @param string
 */
declare function toCamelCase(string: string): string;
/**
 * 把驼峰法转为用 - 分隔的字符串（如 boxSizing 转换为 box-sizing）
 * @param string
 */
declare function toKebabCase(string: string): string;
/**
 * 获取元素的样式值
 * @param element
 * @param name
 */
declare function getComputedStyleValue(element: HTMLElement, name: string): string;
/**
 * 检查元素的 box-sizing 是否是 border-box
 * @param element
 */
declare function isBorderBox(element: HTMLElement): boolean;
/**
 * 获取元素的 padding, border, margin 宽度（两侧宽度的和，单位为px）
 * @param element
 * @param direction
 * @param extra
 */
declare function getExtraWidth(element: HTMLElement, direction: 'width' | 'height', extra: 'padding' | 'border' | 'margin'): number;
/**
 * 获取元素的样式值，对 width 和 height 进行过处理
 * @param element
 * @param name
 */
declare function getStyle(element: HTMLElement, name: string): string;
/**
 * 获取子节点组成的数组
 * @param target
 * @param parent
 */
declare function getChildNodesArray(target: string, parent: string): Array<Node>;
/**
 * 始终返回 false 的函数
 */
declare function returnFalse(): boolean;
/**
 * 数值单位的 CSS 属性
 */
declare const cssNumber: string[];
export { isNodeName, isArrayLike, isObjectLike, isFunction, isString, isNumber, isBoolean, isUndefined, isNull, isWindow, isDocument, isElement, isNode, isIE, toElement, toCamelCase, toKebabCase, getComputedStyleValue, isBorderBox, getExtraWidth, getStyle, getChildNodesArray, returnFalse, cssNumber, };
